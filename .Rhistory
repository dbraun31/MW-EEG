group
head(m)
cors <- list()
for (group in 1:cuts) {
cors[[paste0('group', group)]] <- cor(m[m$cluster == paste('Group', group), !colnames(m) %in% c('cluster')])
}
ors
cors
rm(list=ls())
library(tidyverse)
source('scripts/helpers/plotters.r')
source('scripts/helpers/computers.r')
idx_to_subject <- function(idx, d) {
subjects <- unique(d$subject)
return(subjects[idx])
}
d <- read.csv('data/behavioral/MW_EEG_behavioral.csv')
# Drop missing data
d <- d[complete.cases(d),]
# Keep only subjects with determined number of observations
subject_mask <- d %>%
group_by(subject) %>%
summarize(count = n()) %>%
filter(count >= 40) %>%
pull(subject)
d <- d[d$subject %in% subject_mask, ]
d <- d[, !colnames(d) %in% c('conf', 'run')]
# Normalize
d <- normalize_subject_item(d)
# Get correlation matrix for each subject
cors <- list()
for (subject in unique(d$subject)) {
t <- d[d$subject==subject, colnames(d) != 'subject']
cors[[paste0('sub_', subject)]] <- cor(t)
}
# Compute distances
N <- length(unique(d$subject))
distances <- matrix(0, nrow = N, ncol = N)
frob <- function(m1, m2) {
return(sqrt(sum((m1 - m2)^2)))
}
for (subject_i in 1:N) {
for (subject_j in 1:N) {
distances[subject_i,subject_j] <- frob(cors[[subject_i]], cors[[subject_j]])
}
}
# Cluster
# The ids here are indices of the subject vector
hc <- hclust(dist(distances))
plot(hc)
# Group cors
groups <- 3
labels <- cutree(hc, k=groups)
labels
summary(factor(labels))
m1 <- cor(d[d$subject==idx_to_subject(3,d), colnames(d) != 'subject'])
m2 <- cor(d[d$subject==idx_to_subject(28,d), colnames(d) != 'subject'])
plot_cors(m1, m2)
ggsave('figures/cor_cluster/cor_heat.png', height = 720, width = 1280, units = 'px', dpi = 96)
# Group cors
groups <- 3
labels <- cutree(hc, k=groups)
cluster_code <- data.frame(subject = unique(d$subject), cluster = labels)
m <- d %>%
inner_join(cluster_code) %>%
mutate(cluster = paste('Group', cluster)) %>%
select(-subject)
cors <- list()
for (group in 1:cuts) {
cors[[paste0('group', group)]] <- cor(m[m$cluster == paste('Group', group), !colnames(m) %in% c('cluster')])
}
for (group in 1:groups) {
cors[[paste0('group', group)]] <- cor(m[m$cluster == paste('Group', group), !colnames(m) %in% c('cluster')])
}
cors
head(m)
head(d)
head(cluster_code)
#m <- d %>%
d %>%
inner_join(cluster_code) %>%
mutate(cluster = paste('Group', cluster)) %>%
head()
m
View(m[m$cluster=='Group 1',])
groups <- 3
labels <- cutree(hc, k=groups)
cluster_code <- data.frame(subject = unique(d$subject), cluster = labels)
m <- d %>%
inner_join(cluster_code) %>%
mutate(cluster = paste('Group', cluster)) %>%
select(-subject)
cors <- list()
for (group in 1:groups) {
cors[[paste0('group', group)]] <- cor(m[m$cluster == paste('Group', group), !colnames(m) %in% c('cluster')])
}
cors
d <- data.frame()
for (group in cors) {
d <- rbind(d, data.frame(cors[[group]], group=group))
}
for (group in cors) {
print(group)
#d <- rbind(d, data.frame(cors[[group]], group=group))
}
for (group in names(cors)) {
print(group)
#d <- rbind(d, data.frame(cors[[group]], group=group))
}
for (group in names(cors)) {
d <- rbind(d, data.frame(cors[[group]], group=group))
}
head(d)
d %>%
gather(item, cor, aff:self) %>%
head()
d %>%
mutate(item1 = rownames(.)) %>%
gather(item2, cor, aff:self) %>%
head()
d %>%
mutate(item1 = rownames(.)) %>%
gather(item2, cor, aff:self) %>%
mutate(cor = ifelse(var1 < var2, 0, cor),
group = recode(id, `group1` = 'Group 1', `group2` = 'Group 2'),
label = ifelse(var1 <= var2, '', round(cor, 2))) %>%
head()
d %>%
mutate(item1 = rownames(.)) %>%
gather(item2, cor, aff:self) %>%
mutate(cor = ifelse(item1 < item2, 0, cor),
group = recode(id, `group1` = 'Group 1', `group2` = 'Group 2'),
label = ifelse(item1 <= item2, '', round(cor, 2))) %>%
head()
d %>%
mutate(item1 = rownames(.)) %>%
gather(item2, cor, aff:self) %>%
mutate(cor = ifelse(item1 < item2, 0, cor),
group = recode(group, `group1` = 'Group 1', `group2` = 'Group 2'),
label = ifelse(item1 <= item2, '', round(cor, 2))) %>%
head()
d %>%
mutate(item1 = rownames(.)) %>%
gather(item2, cor, aff:self) %>%
mutate(cor = ifelse(item1 < item2, 0, cor),
group = recode(group, `group1` = 'Group 1', `group2` = 'Group 2'),
label = ifelse(item1 <= item2, '', round(cor, 2))) %>%
ggplot(aes(x = item1, y = item2, fill = cor)) +
geom_tile() +
geom_text(aes(label=label)) +
scale_fill_gradient2(low = blue, high = orange, mid = 'white')  +
facet_grid(group~.) +
labs(
x = '',
y = '',
fill = ''
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
strip.background = element_rect(fill = NA),
legend.position = c(.25, .9))
d %>%
mutate(item1 = rownames(.)) %>%
gather(item2, cor, aff:self) %>%
mutate(cor = ifelse(item1 < item2, 0, cor),
group = recode(group, `group1` = 'Group 1', `group2` = 'Group 2'),
label = ifelse(item1 <= item2, '', round(cor, 2))) %>%
head()
d %>%
mutate(item1 = rownames(.)) %>%
gather(item2, cor, aff:self) %>%
mutate(cor = ifelse(item1 < item2, 0, cor),
group = recode(group, `group1` = 'Group 1', `group2` = 'Group 2'),
label = ifelse(item1 <= item2, '', round(cor, 2))) %>%
summarize(unique(item1))
d %>%
mutate(item1 = rownames(.)) %>%
gather(item2, cor, aff:self) %>%
mutate(cor = ifelse(item1 < item2, 0, cor),
group = recode(group, `group1` = 'Group 1', `group2` = 'Group 2'),
label = ifelse(item1 <= item2, '', round(cor, 2)),
item1 = gsub('\\d', '', item1)) %>%
summarize(unique(item1))
d %>%
mutate(item1 = rownames(.)) %>%
gather(item2, cor, aff:self) %>%
mutate(cor = ifelse(item1 < item2, 0, cor),
group = recode(group, `group1` = 'Group 1', `group2` = 'Group 2'),
label = ifelse(item1 <= item2, '', round(cor, 2)),
item1 = gsub('\\d', '', item1)) %>%
ggplot(aes(x = item1, y = item2, fill = cor)) +
geom_tile() +
geom_text(aes(label=label)) +
scale_fill_gradient2(low = blue, high = orange, mid = 'white')  +
facet_grid(group~.) +
labs(
x = '',
y = '',
fill = ''
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
strip.background = element_rect(fill = NA),
legend.position = c(.25, .9))
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
cors
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
is.list(cors)
is.matrix(cors)
cors_ <- cors[['group1']] - cors[['group2']]
cors_
cors_ %>%
as.data.frame() %>%
mutate(item1 = rownames(.)) %>%
head()
cors_ <- data.frame(item1 = names(cors_), as.data.frame(cors_))
head(cors_)
names(cors_)
cors_ <- data.frame(item1 = rownames(cors_), as.data.frame(cors_))
cors_
cors_ %>%
gather(item, cor, 2:(ncol(cors_))) %>%
head()
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
typeof(cors_)
class(cors_)
# Diff group1 vs group2
cors_ <- cors[['group1']] - cors[['group2']]
class(cors_)
plot_cors(cors_)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors_)
is.list(cors_)
is.matrix(cors_)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors_)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors_)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors_)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors_)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors_)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors_)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors_)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors_)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors_, title = 'Group 1 - Group 2')
plot_cors(cors)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
plot(hc)
groups <- 4
labels <- cutree(hc, k=groups)
cluster_code <- data.frame(subject = unique(d$subject), cluster = labels)
labels
cluster_code <- data.frame(subject = unique(d$subject), cluster = labels)
head(d)
rm(list=ls())
library(tidyverse)
source('scripts/helpers/plotters.r')
source('scripts/helpers/computers.r')
idx_to_subject <- function(idx, d) {
subjects <- unique(d$subject)
return(subjects[idx])
}
d <- read.csv('data/behavioral/MW_EEG_behavioral.csv')
# Drop missing data
d <- d[complete.cases(d),]
# Keep only subjects with determined number of observations
subject_mask <- d %>%
group_by(subject) %>%
summarize(count = n()) %>%
filter(count >= 40) %>%
pull(subject)
d <- d[d$subject %in% subject_mask, ]
d <- d[, !colnames(d) %in% c('conf', 'run')]
# Normalize
d <- normalize_subject_item(d)
# Get correlation matrix for each subject
cors <- list()
for (subject in unique(d$subject)) {
t <- d[d$subject==subject, colnames(d) != 'subject']
cors[[paste0('sub_', subject)]] <- cor(t)
}
# Compute distances
N <- length(unique(d$subject))
distances <- matrix(0, nrow = N, ncol = N)
frob <- function(m1, m2) {
return(sqrt(sum((m1 - m2)^2)))
}
for (subject_i in 1:N) {
for (subject_j in 1:N) {
distances[subject_i,subject_j] <- frob(cors[[subject_i]], cors[[subject_j]])
}
}
# Cluster
# The ids here are indices of the subject vector
hc <- hclust(dist(distances))
plot(hc)
m1 <- cor(d[d$subject==idx_to_subject(3,d), colnames(d) != 'subject'])
m2 <- cor(d[d$subject==idx_to_subject(28,d), colnames(d) != 'subject'])
plot_cors(m1, m2)
ggsave('figures/cor_cluster/cor_heat.png', height = 720, width = 1280, units = 'px', dpi = 96)
groups <- 4
labels <- cutree(hc, k=groups)
cluster_code <- data.frame(subject = unique(d$subject), cluster = labels)
m <- d %>%
inner_join(cluster_code) %>%
mutate(cluster = paste('Group', cluster)) %>%
select(-subject)
cors <- list()
for (group in 1:groups) {
cors[[paste0('group', group)]] <- cor(m[m$cluster == paste('Group', group), !colnames(m) %in% c('cluster')])
}
plot_cors(cors)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
plot(hc)
library(dendextend)
install.packages('dendextend')
library(dendextend)
dendro <- as.dendrogram(hc)
dendro
dendro <- as.dendrogram(hc)
dendro <- color_branches(dendro, k = groups)
plot(dendro)
plot(hc)
dendro <- hang.dendrogram(dendro, hang_height=0.1)
plot(dendro)
labels(dend_hanged)
labels(dendro)
labels(dendro) <- rep("👤", length(labels(dendro)))
plot(dendro)
dendro <- as.dendrogram(hc)
dendro <- color_branches(dendro, k = groups)
dendro <- hang.dendrogram(dendro, hang_height=0.1)
plot(dendro)
plot(dendro, horiz = TRUE)
plot(rev(dendro), horiz = TRUE)
help(color_branches)
dendro <- as.dendrogram(hc)
dendro <- color_branches(dendro, k = groups, groupLabels = TRUE)
dendro <- hang.dendrogram(dendro, hang_height=0.1)
plot(rev(dendro), horiz = TRUE)
1080/92
1920/3/92
ggsave('figures/2023-11-28_labmeeting/dendro.pdf', height = 1080/92, width = 1920/3/92)
help(ggsave)
ggsave(plot = p, filename = 'figures/2023-11-28_labmeeting/dendro.pdf', height = 1080/92, width = 1920/3/92)
p <- plot(rev(dendro), horiz = TRUE)
ggsave(plot = p, filename = 'figures/2023-11-28_labmeeting/dendro.pdf', height = 1080/92, width = 1920/3/92)
ggsave(plot = p, filename = 'figures/2023-11-28_labmeeting/dendro.pdf', height = 1080/92, width = 1920/3/92)
ggsave(plot = p, filename = 'figures/2023-11-28_labmeeting/dendro.png', height = 1080/92, width = 1920/3/92)
p <- plot(rev(dendro), horiz = TRUE)
ggsave(plot = p, filename = 'figures/2023-11-28_labmeeting/dendro.png', height = 1080/92, width = 1920/3/92)
ggsave(filename = 'figures/2023-11-28_labmeeting/dendro.png', plot = p, height = 1080/92, width = 1920/3/92)
p <- plot(rev(dendro), horiz = TRUE)
ggsave(filename = 'figures/2023-11-28_labmeeting/dendro.png', plot = p, height = 1080/92, width = 1920/3/92)
p <- as.grob(p)
pdf
help(pdf)
pdf('figures/2023-11-28_labmeeting/dendro.pdf', width = 1920/3/92, height = 1080/92)
p
dev.off()
png('figures/2023-11-28_labmeeting/dendro.pdf', width = 1920/3/92, height = 1080/92)
p
dev.off()
png('figures/2023-11-28_labmeeting/dendro.png', width = 1920/3/92, height = 1080/92)
p
dev.off()
dev.off()
ggsave(filename = 'figures/2023-11-28_labmeeting/dendro.png', plot = plot(rev(dendro), horiz=TRUE),
height = 1080/92, width = 1920/3/92)
ggsave(filename = 'figures/2023-11-28_labmeeting/dendro.pdf', plot = plot(rev(dendro), horiz=TRUE),
height = 1080/92, width = 1920/3/92)
ggsave(filename = 'figures/2023-11-28_labmeeting/dendro.png', plot = plot(rev(dendro), horiz=TRUE),
height = 1080/92, width = 1920/3/92)
q()
rm(list=ls())
library(tidyverse)
library(dendextend)
source('scripts/helpers/plotters.r')
source('scripts/helpers/computers.r')
idx_to_subject <- function(idx, d) {
subjects <- unique(d$subject)
return(subjects[idx])
}
d <- read.csv('data/behavioral/MW_EEG_behavioral.csv')
# Drop missing data
d <- d[complete.cases(d),]
# Keep only subjects with determined number of observations
subject_mask <- d %>%
group_by(subject) %>%
summarize(count = n()) %>%
filter(count >= 40) %>%
pull(subject)
d <- d[d$subject %in% subject_mask, ]
d <- d[, !colnames(d) %in% c('conf', 'run')]
# Normalize
d <- normalize_subject_item(d)
# Get correlation matrix for each subject
cors <- list()
for (subject in unique(d$subject)) {
t <- d[d$subject==subject, colnames(d) != 'subject']
cors[[paste0('sub_', subject)]] <- cor(t)
}
# Compute distances
N <- length(unique(d$subject))
distances <- matrix(0, nrow = N, ncol = N)
frob <- function(m1, m2) {
return(sqrt(sum((m1 - m2)^2)))
}
for (subject_i in 1:N) {
for (subject_j in 1:N) {
distances[subject_i,subject_j] <- frob(cors[[subject_i]], cors[[subject_j]])
}
}
# Cluster
# The ids here are indices of the subject vector
hc <- hclust(dist(distances))
plot(hc)
m1 <- cor(d[d$subject==idx_to_subject(3,d), colnames(d) != 'subject'])
m2 <- cor(d[d$subject==idx_to_subject(28,d), colnames(d) != 'subject'])
plot_cors(m1, m2)
ggsave('figures/cor_cluster/cor_heat.png', height = 720, width = 1280, units = 'px', dpi = 96)
# Group cors
groups <- 4
labels <- cutree(hc, k=groups)
# Plot colored dendro
dendro <- as.dendrogram(hc)
dendro <- color_branches(dendro, k = groups, groupLabels = TRUE)
dendro <- hang.dendrogram(dendro, hang_height=0.1)
p <- plot(rev(dendro), horiz = TRUE)
ggsave(filename = 'figures/2023-11-28_labmeeting/dendro.png', plot = plot(rev(dendro), horiz=TRUE),
height = 1080/92, width = 1920/3/92)
ggsave(filename = 'figures/2023-11-28_labmeeting/dendro.pdf', plot = plot(rev(dendro), horiz=TRUE),
height = 1080/92, width = 1920/3/92)
dir(p)
str(p)
dendro
pdf('figures/2023-11-28_labmeeting/dendro.pdf')
plot(rev(dendro), horiz = TRUE)
dev.off()
pdf('figures/2023-11-28_labmeeting/dendro.pdf', height = 1080/92, width = 1920/3/92)
plot(rev(dendro), horiz = TRUE)
dev.off()
cluster_code <- data.frame(subject = unique(d$subject), cluster = labels)
m <- d %>%
inner_join(cluster_code) %>%
mutate(cluster = paste('Group', cluster)) %>%
select(-subject)
cors <- list()
for (group in 1:groups) {
cors[[paste0('group', group)]] <- cor(m[m$cluster == paste('Group', group), !colnames(m) %in% c('cluster')])
}
plot_cors(cors)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
ggsave('figures/2023-11-28_labmeeting/cors.pdf', height=1080/2, width = 1920/(2/3)/92, units = 'in')
ggsave('figures/2023-11-28_labmeeting/cors.pdf', height=1080/92, width = 1920/(2/3)/92, units = 'in')
ggsave('figures/2023-11-28_labmeeting/cors.pdf', height=1080/92, width = 1920*(2/3)/92, units = 'in')
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
ggsave('figures/2023-11-28_labmeeting/cors.pdf', height=1080/92, width = 1920*(2/3)/92, units = 'in')
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
ggsave('figures/2023-11-28_labmeeting/cors.pdf', height=1080/92, width = 1920*(2/3)/92, units = 'in')
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
ggsave('figures/2023-11-28_labmeeting/cors.pdf', height=1080/92, width = 1920*(2/3)/92, units = 'in')
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
ggsave('figures/2023-11-28_labmeeting/cors.pdf', height=1080/92, width = 1920*(2/3)/92, units = 'in')
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
ggsave('figures/2023-11-28_labmeeting/cors.pdf', height=1080/92, width = 1920*(2/3)/92, units = 'in')
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
ggsave('figures/2023-11-28_labmeeting/cors.pdf', height=1080/92, width = 1920*(2/3)/92, units = 'in')
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
plot_cors(cors)
ggsave('figures/2023-11-28_labmeeting/cors.pdf', height=1080/92, width = 1920*(2/3)/92, units = 'in')
q()
