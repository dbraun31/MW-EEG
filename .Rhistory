geom_abline(slope = m1$coefficients[2], intercept = 0, color = 'blue') +
geom_abline(slope = -(1/m1$coefficients[2]), intercept=0, color='red') +
labs(
x = 'Height (z-score)',
y = 'Weight (z-score)'
) +
theme_bw() +
theme(panel.grid = element_blank())
ggsave('figures/ppt/02b.png', height=height, width=width, units='px', dpi=120)
## 03
pca <- prcomp(d)
xmax <- max(data.frame(pca$x)$PC1)
xmin <- min(data.frame(pca$x)$PC1)
pca$x %>%
as.data.frame(.) %>%
ggplot(aes(x = PC1, y = PC2)) +
geom_point() +
ylim(c(xmin, xmax)) +
theme_bw() +
theme(panel.grid = element_blank())
ggsave('figures/ppt/03.png', height=height, width=width, units='px', dpi=120)
pca$x %>%
as.data.frame(.) %>%
ggplot(aes(x = PC1, y = PC2)) +
geom_point() +
ylim(c(xmin, xmax)) +
theme_bw() +
theme(panel.grid = element_blank())
pca$rotation
rm(list=ls())
library(tidyverse)
library(ggraph)
source('scripts/helpers/plotters.r')
source('scripts/helpers/computers.r')
d <- read.csv('data/behavioral_data/MW_EEG_behavioral.csv')
# Content or movement items
content <- FALSE
if (content) {
items <- c('att', 'past', 'fut', 'self', 'ppl', 'arou', 'aff', 'image', 'ling')
} else {
items <- c('eng', 'mvmt', 'delib')
}
# Keep only subjects with 50 observations
subject_mask <- d %>%
group_by(subject) %>%
summarize(count = n()) %>%
filter(count >= 50) %>%
pull(subject)
d <- d[d$subject %in% subject_mask, ]
# Drop low confidence (< 75) responses
d <- d[d$conf > 75, c('subject', items)]
# Normalize
d <- normalize_subject_item(d)
# Run PCAs
subject_pcas <- list()
Nfactors <- min(length(items), 6)
for (subject in d$subject) {
pca_data <- d[d$subject==subject, colnames(d) != 'subject']
subject_pcas[['rotations']][[paste0('subject', subject)]] <- prcomp(pca_data)$rotation[,1:Nfactors]
subject_pcas[['eigens']][[paste0('subject', subject)]] <- eigen(cov(pca_data))$values[1:Nfactors]
}
# Compute distance and cluster
distance_matrix <- matrix(0, nrow=length(subject_pcas[['rotations']]), ncol=length(subject_pcas[['rotations']]))
for (i in 1:length(subject_pcas[['rotations']])) {
for (j in 1:length(subject_pcas[['rotations']])) {
# Frobenius norm of difference between two matrices
# distance_matrix[i,j] <- norm(subject_pcas[[i]] - subject_pcas[[j]], type='F')
# Mean Euclidean distance between each column of two matrices
# Could expand this to weight the average by the eigenvalues
distance_matrix[i,j] <- weighted_distance(subject_pcas[['rotations']][[i]] - subject_pcas[['rotations']][[j]],
e1=subject_pcas[['eigens']][[i]], e2=subject_pcas[['eigens']][[j]])
}
}
subject_pcas$rotationspp1
subject_pcas$rotations[[1]]
data.frame(subject_pcas$rotations[[1]])
quick(data.frame(subject_pcas$rotations[[1]]))
quick <- function(rot) {
rot <- data.frame(apply(data.frame(rot), MARGIN=2, round, digits=2))
return(knitr::kable(rot, format='html'))
}
quick(data.frame(subject_pcas$rotations[[1]]))
# Cluster and plot dendrogram
hc <- hclust(dist(distance_matrix))
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, size = 6) +  # Add labels
theme_bw() +  # Customize the theme
theme(text = element_text(size = 12),
axis.text = element_blank(),
panel.grid = element_blank())
dendrogram <- as.dendrogram(hc)
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, size = 6) +  # Add labels
theme_bw() +  # Customize the theme
theme(text = element_text(size = 12),
axis.text = element_blank(),
panel.grid = element_blank())
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, size = 6) +  # Add labels
theme_bw() +  # Customize the theme
theme(text = element_text(size = 12),
axis.text = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
1024/720
16/9
1280/720
ggsave('figures/ppt/pca_subjects_dendro.png', height=720, width=1280, unit='px', dpi=150)
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, size = 6) +  # Add labels
theme_bw() +  # Customize the theme
theme(text = element_text(size = 12),
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggsave('figures/ppt/pca_subjects_dendro.png', height=720, width=1280, unit='px', dpi=150)
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, size = 6) +  # Add labels
theme_bw() +  # Customize the theme
theme(text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, size = 6) +  # Add labels
labs(
x = '',
y = 'Height'
) +
theme_bw() +  # Customize the theme
theme(text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggsave('figures/ppt/pca_subjects_dendro.png', height=720, width=1280, unit='px', dpi=150)
source('scripts/helpers/objects.r')
items <- c('past', 'fut', 'self', 'ppl', 'aff')
item_names_dict[items]
items <- c('eng', 'mvmt', 'delib')
item_names_dict[items]
## VISUALIZE WITH WORD CLOUD ##
plot_word_cloud(subject_pcas, c(12, 13, 6, 9))
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, size = 6) +  # Add labels
labs(
x = '',
y = 'Height'
) +
theme_bw() +  # Customize the theme
coord_flip() +
theme(text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= 1 size = 6) +  # Add labels
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= 1, size = 6) +  # Add labels
labs(
x = '',
y = 'Height'
) +
theme_bw() +  # Customize the theme
coord_flip() +
theme(text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= -1.5, size = 6) +  # Add labels
labs(
x = '',
y = 'Height'
) +
theme_bw() +  # Customize the theme
coord_flip() +
theme(text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= -1.2, size = 6) +  # Add labels
labs(
x = '',
y = 'Height'
) +
theme_bw() +  # Customize the theme
coord_flip() +
theme(text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= -1, size = 6) +  # Add labels
labs(
x = '',
y = 'Height'
) +
theme_bw() +  # Customize the theme
coord_flip() +
theme(text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= -1, size = 6) +  # Add labels
labs(
x = 'Height',
y = ''
) +
theme_bw() +  # Customize the theme
coord_flip() +
theme(text = element_text(size = 12),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= -1, size = 6) +  # Add labels
labs(
x = 'Height',
y = ''
) +
theme_bw() +  # Customize the theme
coord_flip() +
theme(text = element_text(size = 12),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= -1, size = 6) +  # Add labels
labs(
x = '',
y = 'Height'
) +
theme_bw() +  # Customize the theme
theme(text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank()) +
coord_flip()
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= -1, size = 6) +  # Add labels
labs(
x = '',
y = 'Height'
) +
theme_bw() +  # Customize the theme
coord_flip()
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= -1, size = 6) +  # Add labels
labs(
x = '',
y = 'Height'
) +
theme_bw() +  # Customize the theme
coord_flip() +
theme(text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank()) +
ggsave('figures/ppt/pca_subjects_dendro.png', height=720, width=1280, unit='px', dpi=150)
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= -1, size = 6) +  # Add labels
labs(
x = '',
y = 'Height'
) +
theme_bw() +  # Customize the theme
coord_flip() +
theme(text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank()) +
ggsave('figures/ppt/pca_subjects_dendro.png', height=720, width=1280, unit='px', dpi=150)
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= -1, size = 6) +  # Add labels
labs(
x = '',
y = 'Height'
) +
theme_bw() +  # Customize the theme
coord_flip() +
theme(text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= -1, size = 6) +  # Add labels
labs(
x = '',
y = ''
) +
theme_bw() +  # Customize the theme
coord_flip() +
theme(text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= -1, size = 6) +  # Add labels
labs(
x = '',
y = ''
) +
theme_bw() +  # Customize the theme
coord_flip() +
theme(text = element_text(size = 12),
axis.text = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggsave('figures/ppt/pca_subjects_dendro_rotated.png', height=720, width=1280, unit='px', dpi=150)
ggsave('figures/ppt/pca_subjects_dendro_rotated.png', height=720, width=300, unit='px', dpi=150)
ggsave('figures/ppt/pca_subjects_dendro_rotated.png', height=720, width=300, unit='px', dpi=200)
ggsave('figures/ppt/pca_subjects_dendro_rotated.png', height=720, width=300, unit='px', dpi=300)
ggsave('figures/ppt/pca_subjects_dendro_rotated.png', height=720, width=300, unit='px', dpi=96)
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= -1, size = 5) +  # Add labels
labs(
x = '',
y = ''
) +
theme_bw() +  # Customize the theme
coord_flip() +
theme(text = element_text(size = 12),
axis.text = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggsave('figures/ppt/pca_subjects_dendro_rotated.png', height=720, width=300, unit='px', dpi=96)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
subject_idxs <- c(12, 13, 6, 9)
d <- rotations_to_df(subject_pcas, subject_idxs)
head(d)
d %>%
gather(PC, loading, PC1:(ncol(d))) %>%
inner_join(eigen_df) %>%
mutate(subject = factor(subject, levels = subject_idxs)) %>%
head()
eigen_df <- eigens_to_df(subject_pcas, subject_idxs)
d %>%
gather(PC, loading, PC1:(ncol(d))) %>%
inner_join(eigen_df) %>%
mutate(subject = factor(subject, levels = subject_idxs)) %>%
head()
d %>%
gather(PC, loading, PC1:(ncol(d))) %>%
inner_join(eigen_df) %>%
mutate(subject = factor(subject, levels = subject_idxs)) %>%
ggplot(aes(label=item, size = abs(loading), color = loading)) +
geom_text_wordcloud(area_corr = TRUE) +
scale_size_area(max_size = 30) +
scale_color_gradientn(colors = rev(brewer_pal(type='div')(9))) +
facet_grid(subject~PC) +
theme_bw() +
theme(strip.background = element_rect(fill=NA))
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
## VISUALIZE WITH WORD CLOUD ##
plot_word_cloud(subject_pcas, c(7, 2, 16, 14, 4))
ggsave('figures/ppt/word_cloud_dynamic_g1.png', height = 720, width = 1000, units = 'px', dpi = 96)
warnings
warnings()
## VISUALIZE WITH WORD CLOUD ##
plot_word_cloud(subject_pcas, c(15, 8, 5, 3))
ggsave('figures/ppt/word_cloud_dynamic_g2.png', height = 720, width = 1000, units = 'px', dpi = 96)
## VISUALIZE WITH WORD CLOUD ##
plot_word_cloud(subject_pcas, c(9, 6, 13, 12))
ggsave('figures/ppt/word_cloud_dynamic_g3.png', height = 720, width = 1000, units = 'px', dpi = 96)
## VISUALIZE WITH WORD CLOUD ##
plot_word_cloud(subject_pcas, c(11, 10, 1))
ggsave('figures/ppt/word_cloud_dynamic_g4.png', height = 720, width = 1000, units = 'px', dpi = 96)
rm(list=ls())
library(tidyverse)
library(ggraph)
source('scripts/helpers/plotters.r')
source('scripts/helpers/computers.r')
d <- read.csv('data/behavioral_data/MW_EEG_behavioral.csv')
# Content or movement items
content <- TRUE
if (content) {
items <- c('past', 'fut', 'self', 'ppl', 'aff')
#items <- c('att', 'past', 'fut', 'self', 'ppl', 'arou', 'aff', 'image', 'ling')
} else {
items <- c('eng', 'mvmt', 'delib')
}
# Keep only subjects with 50 observations
subject_mask <- d %>%
group_by(subject) %>%
summarize(count = n()) %>%
filter(count >= 50) %>%
pull(subject)
d <- d[d$subject %in% subject_mask, ]
# Drop low confidence (< 75) responses
d <- d[d$conf > 75, c('subject', items)]
# Normalize
d <- normalize_subject_item(d)
# Run PCAs
subject_pcas <- list()
Nfactors <- min(length(items), 6)
for (subject in d$subject) {
pca_data <- d[d$subject==subject, colnames(d) != 'subject']
subject_pcas[['rotations']][[paste0('subject', subject)]] <- prcomp(pca_data)$rotation[,1:Nfactors]
subject_pcas[['eigens']][[paste0('subject', subject)]] <- eigen(cov(pca_data))$values[1:Nfactors]
}
# Compute distance and cluster
distance_matrix <- matrix(0, nrow=length(subject_pcas[['rotations']]), ncol=length(subject_pcas[['rotations']]))
for (i in 1:length(subject_pcas[['rotations']])) {
for (j in 1:length(subject_pcas[['rotations']])) {
# Frobenius norm of difference between two matrices
# distance_matrix[i,j] <- norm(subject_pcas[[i]] - subject_pcas[[j]], type='F')
# Mean Euclidean distance between each column of two matrices
# Could expand this to weight the average by the eigenvalues
distance_matrix[i,j] <- weighted_distance(subject_pcas[['rotations']][[i]] - subject_pcas[['rotations']][[j]],
e1=subject_pcas[['eigens']][[i]], e2=subject_pcas[['eigens']][[j]])
}
}
# Cluster and plot dendrogram
hc <- hclust(dist(distance_matrix))
dendrogram <- as.dendrogram(hc)
ggraph(dendrogram, layout = "dendrogram") +
geom_edge_elbow() +  # Customize edge appearance
geom_node_text(aes(label = label), hjust = 0, vjust= -1, size = 5) +  # Add labels
labs(
x = '',
y = ''
) +
theme_bw() +  # Customize the theme
coord_flip() +
theme(text = element_text(size = 12),
axis.text = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggsave('figures/ppt/pca_subjects_dendro_content_rotated.png', height=720, width=300, unit='px', dpi=96)
## VISUALIZE WITH WORD CLOUD ##
plot_word_cloud(subject_pcas, c(13, 6, 14, 1, 10, 7))
warnings()
ggsave('figures/ppt/word_cloud_content_g1.png', height = 720, width = 1000, units = 'px', dpi = 96)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
## VISUALIZE WITH WORD CLOUD ##
plot_word_cloud(subject_pcas, c(13, 6, 14, 1, 10, 7))
ggsave('figures/ppt/word_cloud_content_g1.png', height = 720, width = 1000, units = 'px', dpi = 96)
source("~/Dropbox/post_doc/professional/projects/MW_EEG/scripts/helpers/plotters.r")
## VISUALIZE WITH WORD CLOUD ##
plot_word_cloud(subject_pcas, c(12, 3))
ggsave('figures/ppt/word_cloud_content_g1.png', height = 720, width = 1000, units = 'px', dpi = 96)
## VISUALIZE WITH WORD CLOUD ##
plot_word_cloud(subject_pcas, c(13, 6, 14, 1, 10, 7), max_size = 20)
ggsave('figures/ppt/word_cloud_content_g1.png', height = 720, width = 1000, units = 'px', dpi = 96)
## VISUALIZE WITH WORD CLOUD ##
plot_word_cloud(subject_pcas, c(15, 2, 9, 5, 11, 4), max_size = 20)
ggsave('figures/ppt/word_cloud_content_g3.png', height = 720, width = 1000, units = 'px', dpi = 96)
warnings()
ggsave('figures/ppt/word_cloud_content_g3.png', height = 720, width = 1000, units = 'px', dpi = 96)
## VISUALIZE WITH WORD CLOUD ##
plot_word_cloud(subject_pcas, c(15, 2, 9, 5, 11, 4), max_size = 20)
ggsave('figures/ppt/word_cloud_content_g3.png', height = 720, width = 1000, units = 'px', dpi = 96)
## VISUALIZE WITH WORD CLOUD ##
plot_word_cloud(subject_pcas, c(16, 8), max_size = 20)
ggsave('figures/ppt/word_cloud_content_g4.png', height = 720, width = 1000, units = 'px', dpi = 96)
## VISUALIZE WITH WORD CLOUD ##
plot_word_cloud(subject_pcas, c(16, 8), max_size = 30)
ggsave('figures/ppt/word_cloud_content_g4.png', height = 720, width = 1000, units = 'px', dpi = 96)
sqrt(c(.99, 2.55, 3.43))
q()
d <- read.csv('data/behavioral_data/MW_EEG_behavioral.csv')
length(unique(d$subject))
q()
q()
d <- read.csv('data/behavioral_data/MW_EEG_behavioral.csv')
head()
head(d)
i
head(d)
q()
